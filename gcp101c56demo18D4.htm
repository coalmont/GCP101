<html>
<!--
	This source code is for use in Chapter 56 of the online book "GCP 101 by Ri4C".
	Chapter 56 URL: xxx
	Source: xxx
	Book homepage: https://ri4c.com/gcp101/
 -->
 
<head>
<meta charset='utf-8'/>


<script type='text/javascript'>

'use strict';

const selfSuffix = '18D4';
const chapterNumber = '56';

var global = { // Global constants and variables

	googleCloudProjectId : 'tb4gcp18a',
	debug : true,
	iframe25Loaded : false,
	expectedCloudServiceDelaySeconds : 1,

	selfTitle : 'Gcp101C'+chapterNumber+'Demo'+selfSuffix,
	cellInitialKey : 'myrow'+chapterNumber,
	cellInitialData : 'mydata'+selfSuffix,

	cloudServiceSetUrl : 'TBD',
	cloudServiceGetValueUrl : 'TBD',
	cloudServiceGetNamesUrl : 'TBD',
	codingLessonUrl : 'https://thumosforlife.wordpress.com/gpg101-chapter-52-gcp101c52demo18b2-local-app/',
	HR : '\n--------------------\n'
}

global.cloudServiceSetUrl = 'https://us-central1-'+global.googleCloudProjectId+'.cloudfunctions.net/datastore2'+'3setvalue'; // setValue
global.cloudServiceGetValueUrl = 'https://us-central1-'+global.googleCloudProjectId+'.cloudfunctions.net/datastore5'+'1getvalue'; // getValue
global.cloudServiceGetNamesUrl = 'https://us-central1-'+global.googleCloudProjectId+'.cloudfunctions.net/datastore5'+'3getnames'; // getNames

	
function padLeadZeros(number, zeroCount) { // L43 No tracing a low-level utility
	// Unit Test: https://codepen.io/ri4c/pen/XZMPdK
	
	var x = number;
	
	switch (zeroCount) {
		case 2: x = number <= 99 ? ("00"+number).slice(-2) : number; break;
		case 3: x = number <= 999 ? ("000"+number).slice(-3) : number; break;
		case 4: x = number <= 9999 ? ("0000"+number).slice(-4) : number; break;
		default: x = number;
	}
	
	return x;
}


function logWrite(message) { // L59 No tracing a low-level utility
	//
	
	if (!global.debug) return;
	
	try {
		var stack = new Error().stack;
		var caller = stack.split('\n')[1].trim();
		caller = caller.split('@')[0].trim();
		caller = caller.split('/')[0].trim();
		console.log(simpleTimestamp()+' '+caller+': ' + message);
	}
	catch(err) {console.log(err.message)}
}


function simpleTimestamp() { // L75 No tracing a low-level utility
	//
	
	var xNow = new Date();
	
	var xHours = padLeadZeros(xNow.getHours(),2);
	var xMinutes = padLeadZeros(xNow.getMinutes(),2);
	var xSeconds = padLeadZeros(xNow.getSeconds(),2);
	var xMilliseconds = padLeadZeros(xNow.getMilliseconds(),3);
	
	return xHours + ':' + xMinutes + ':' + xSeconds + '.' + xMilliseconds;
}

function bodyOnloadEventHandler(event) { // L88 F1: Aim form action at the cloud service 
	//
	
	logWrite('L1091 Start');
	loadComboEntityList();
	
	document.getElementById('h3topic56id').innerHTML = global.selfTitle;	
	document.getElementById('key56id').value = global.cellInitialKey;	
	document.getElementById('column56id').value = global.cellInitialData;	
	
	logWrite('L1098 Resets cloud service URL');
	document.getElementById('form56id').action = global.cloudServiceSetUrl;	
	
	document.getElementById('lessonUrl56id').value = global.codingLessonUrl;
	document.getElementById('lessonUrl56id').style.width = 0.4*screen.width;
	
	document.getElementById('iframe56id').style.width = 0.4*screen.width;
	
	document.getElementById('prompt56id').style.height = 200;
	document.getElementById('prompt56id').style.width = 0.4*screen.width;
	document.getElementById('prompt56id').innerHTML = 'Ready at ' + simpleTimestamp(); 
	
	logWrite('L1110 Finish'+global.HR+'PAGE LOADED'+global.HR);
}


function iframe25OnloadEventHandler(event) { // L114 F2: Flag up iframe25Loaded
	//
	
	logWrite(global.HR);
	logWrite('L2118 Start');
	global.iframe25Loaded = true;
	logWrite('L2120 Finish; Set iframe25Loaded=' + global.iframe25Loaded + global.HR);
}


function form25SubmitEventHandler(event) { // L124 F3: Flag down iframe25Loaded
	//
	
	logWrite('L3127 Start');
	
	setTimeout( function() {
		logWrite('L3130 Disable the Submit button');
		document.getElementById("btnsubmit56id").disabled = true;
		document.body.style.cursor = 'wait';
		document.getElementById("btnclear56id").focus();
	}, 22);
	
	setTimeout( function() {
	
		logWrite('L3138 Start; iframe25Loaded: ' + global.iframe25Loaded);
		
		resetOutputFields('Submitting data');
		
		var form = document.getElementById('form56id');
		var iFrame = document.getElementById('iframe56id');
		
		global.iframe25Loaded = false;
		iFrame.onload = iframe25OnloadEventHandler(event);
	
		logWrite('L1148 Resets cloud service URL');
		document.getElementById('form56id').action = global.cloudServiceSetUrl;	
		
		logWrite('L3151 Send data to cloud service');
		form.submit();
		
		logWrite('L3154 Watch for cloud response');
		setTimeout( form25SetResponseDelayHandler, 1000*global.expectedCloudServiceDelaySeconds );
		
		logWrite('L3157 Finish; iframe25Loaded: ' + global.iframe25Loaded + global.HR);
	
	}, 222);
	
	logWrite('L3161 Finish');
}


function form25setResponseProcessed() { // L165 F4: Confirm input values
	//

	if (!global.iframe25Loaded) {
		logWrite('L4169 Still waiting for the cloud');	
		return false; 
	}
	
	logWrite('L4173 Start; iframe25Loaded: ' + global.iframe25Loaded);

	var cellKind = document.getElementById('kind56id').value;
	var cellKey = document.getElementById('key56id').value;
	var cellProperty = document.getElementById('column56id').value;
	var cellValue = document.getElementById('lessonUrl56id').value;

	var msg = 'Kind: '+cellKind + '\nKey: '+cellKey + '\nMycolumn3: '+cellProperty + 
		'\n\nurlOfLesson: '+cellValue + '\n\ncloudServiceSetUrl: '+global.cloudServiceSetUrl;
	
	logWrite('L4183 Report input data');
	document.getElementById('prompt56id').innerHTML = msg;
	
	setTimeout( function() {
		logWrite('L4187 Enable the Submit button');
		document.getElementById("btnsubmit56id").disabled = false;
		document.body.style.cursor = 'auto';
	}, 111);
	
	logWrite('L4192 Finish'+global.HR+'ALL DONE'+global.HR);	
	return true;
}


function resetOutputFields(actionVerb) { // L197 F5: Prompt the user of the current status
	//
	
	logWrite('L5200 Start; reset the user interface');
	
	global.iframe25Loaded = false;
	
	document.getElementById('prompt56id').innerHTML = actionVerb + ' at ' + simpleTimestamp(); 
	
	var iFrame = document.getElementById('iframe56id');
	try {
		iFrame.src = 'about:blank';
	} catch (e) {
		logWrite(e.message);
	}
	
	logWrite('L5213 Finish');
}
















function form25SetResponseDelayHandler() { // L231 F7 Watch for and process cloud response
	//
	
	logWrite('L7234 Start');
	
    setTimeout( function() {
		logWrite('L7237 About to check response');
		if (!form25setResponseProcessed())
		{
			logWrite('L7240 About to process response');
			form25SetResponseDelayHandler();
		}
    }, 1000*global.expectedCloudServiceDelaySeconds);
	
	logWrite('L7245 Finish');
}


function form25RetrieveEventHandler(event) { // L249 F13 Process the request from the Retrieve button 
	//
	
	logWrite('L13252 Start');
	
	setTimeout( function() {
		logWrite('L13255 Disable the Retrieve button');
		document.getElementById("btnretrieve56id").disabled = true;
		document.body.style.cursor = 'wait';
		document.getElementById("btnclear56id").focus();
	}, 22);
	
	setTimeout( function() {
	
		logWrite('L13263 Start');
		
		resetOutputFields('Submitting data');
		
		var form = document.getElementById('form56id');
		var iFrame = document.getElementById('iframe56id');
		
		global.iframe25Loaded = false;
		iFrame.onload = iframe25OnloadEventHandler(event);
	
		logWrite('L13273 Resets cloud service URL');
		form.action = global.cloudServiceGetValueUrl;	
		
		logWrite('L13276 Send data to cloud service');
		form.submit();
		
		logWrite('L13279 Watch for cloud response');
		setTimeout( form25GetValueResponseDelayHandler, 1000*global.expectedCloudServiceDelaySeconds );
		
		logWrite('L3156 Finish; iframe25Loaded: ' + global.iframe25Loaded + global.HR);
	
	}, 222);
	
	logWrite('L13286 Finish');
}


function form25GetValueResponseProcessed() { // L290 F14: Confirm input values
	//

	if (!global.iframe25Loaded) {
		logWrite('L14294 Still waiting for the cloud');	
		return false; 
	}
	
	logWrite('L14298 Start; iframe25Loaded: ' + global.iframe25Loaded);

	var cellKind = document.getElementById('kind56id').value;
	var cellKey = document.getElementById('key56id').value;
	var cellProperty = document.getElementById('column56id').value;
	var cellValue = document.getElementById('lessonUrl56id').value;

	var msg = 'Kind: '+cellKind + '\nKey: '+cellKey + '\nMycolumn3: '+cellProperty + 
		'\n\nurlOfLesson: '+cellValue + '\n\ncloudServiceSetUrl: '+global.cloudServiceSetUrl;
	
	logWrite('L14308 Report input data');
	document.getElementById('prompt56id').innerHTML = msg;
	
	setTimeout( function() {
		logWrite('L14312 Enable the Retrieve button');
		document.getElementById("btnretrieve56id").disabled = false;
		document.body.style.cursor = 'auto';
	}, 333);
	
	logWrite('L14317 Finish'+global.HR+'ALL DONE'+global.HR);	
	return true;
}


function form25GetValueResponseDelayHandler() { // L322 F17 Watch for and process GET response
	//
	
	logWrite('L17325 Start');
	
    setTimeout( function() {
		logWrite('L17328 About to check response');
		if (!form25GetValueResponseProcessed())
		{
			logWrite('L17331 About to process response');
			form25GetValueResponseDelayHandler();
		}
    }, 1000*global.expectedCloudServiceDelaySeconds);
	
	logWrite('L17336 Finish');
}






function form25EntitiesEventHandler(event) { // L344 F23 Process the request from the Entities button 
	//
	
	logWrite('L23347 Start');
	
	setTimeout( function() {
		logWrite('L23350 Disable the Entities button');
		document.getElementById("btnentities56id").disabled = true;
		document.body.style.cursor = 'wait';
		document.getElementById("btnclear56id").focus();
	}, 22);
	
	setTimeout( function() {
	
		logWrite('L23358 Start');
		
		resetOutputFields('Submitting data');
		
		var form = document.getElementById('form56id');
		var iFrame = document.getElementById('iframe56id');
		
		global.iframe25Loaded = false;
		iFrame.onload = iframe25OnloadEventHandler(event);
	
		logWrite('L23368 Resets cloud service URL');
		form.action = global.cloudServiceGetNamesUrl;	
		
		logWrite('L23371 Send data to cloud service');
		form.submit();
		
		logWrite('L23374 Watch for cloud response');
		setTimeout( form25GetNamesResponseDelayHandler, 1000*global.expectedCloudServiceDelaySeconds );
		
		logWrite('L23377 Finish; iframe25Loaded: ' + global.iframe25Loaded + global.HR);
	
	}, 222);
	
	logWrite('L23381 Finish');
}


function form25GetNamesResponseDelayHandler() { // L385 F27 Watch for and process GET response
	//
	
	logWrite('L27388 Start');
	
    setTimeout( function() {
		logWrite('L27391 About to check response');
		if (!form25GetNamesResponseProcessed())
		{
			logWrite('L27394 About to process response');
			form25GetNamesResponseDelayHandler();
		}
    }, 1000*global.expectedCloudServiceDelaySeconds);
	
	logWrite('L273399Finish');
}







function form25GetNamesResponseProcessed() { // L408 F24: Confirm input values
	//

	if (!global.iframe25Loaded) {
		logWrite('L24412 Still waiting for the cloud');	
		return false; 
	}
	
	logWrite('L24416 Start; iframe25Loaded: ' + global.iframe25Loaded);

	var cellKind = document.getElementById('kind56id').value;
	var cellKey = document.getElementById('key56id').value;
	var cellProperty = document.getElementById('column56id').value;
	var cellValue = document.getElementById('lessonUrl56id').value;

	var msg = 'Kind: '+cellKind + '\nKey: '+cellKey + '\nMycolumn3: '+cellProperty + 
		'\n\nurlOfLesson: '+cellValue + '\n\ncloudServiceSetUrl: '+global.cloudServiceSetUrl;
	
	logWrite('L24426 Report input data');
	document.getElementById('prompt56id').innerHTML = msg;
	
	setTimeout( function() {
		logWrite('L24430 Enable the Retrieve button');
		document.getElementById("btnentities56id").disabled = false;
		document.body.style.cursor = 'auto';
	}, 333);
	
	logWrite('L24435 Finish'+global.HR+'ALL DONE'+global.HR);	
	return true;
}









function form25ClearEventHandler() { // L447 F6 Reset the UI
	//
	
	
	logWrite('F06451 Start');
	
	resetOutputFields('Ready');
	
	logWrite('F06455 Enable the Submit button');
	document.getElementById("btnsubmit56id").disabled = false;
	document.getElementById("btnretrieve56id").disabled = false;
	document.getElementById("btnentities56id").disabled = false;
	
	
	logWrite('L06461 Finish'+global.HR+'ALL CLEAR'+global.HR);
}




function loadComboEntityList() { // L467 F31 
	logWrite('F31468 Start');
	logWrite('L31599 Finish');
}






</script>

</head>

<body onload='bodyOnloadEventHandler()'>

<h3 id='h3topic56id'>(undeclared title)</h3>

<form id='form56id' target='iframe25name' method='POST' enctype='application/json' action='URL missing'>
	Kind: <input id='kind56id' name='kind' type='text' value='mytable1' title='Kind of data (table)' /><br>
	Key: <input id='key56id' name='key' type='text' value='myrow18A1' title='Name of data key (row)' />
	<select id='cboentitylist56id' name='cboentitylist'>
		 <option value="entityname1">First Entity</option>
		 <option value="entityname2">Second Entity</option>
		 <option value="entityname3">Third Entity</option>
	</select><br>
	Mycolumn3: <input id='column56id' name='value[mycolumn3]' type='text' value='my21data4' title='Name of data property (column)' /><br>
	urlOfLesson: <br><input id='lessonUrl56id' name='value[urlOfLesson]' type='text' value='URL optional' title='Value of data (cell)' />
</form>

<p><button id='btnsubmit56id' name='btnsubmit' onclick='form25SubmitEventHandler()' title='Using datastore23setvalue cloud service'>Submit</button>
	<button id='btnclear56id' name='btnclear' onclick='form25ClearEventHandler()' title='Using NO cloud services'>Clear</button>
	<button id='btnretrieve56id' name='btnretrieve' onclick='form25RetrieveEventHandler()' title='Using datastore51getvalue cloud service'>Retrieve</button>
	<button id='btnentities56id' name='btnentities' onclick='form25EntitiesEventHandler()' title='Using datastore53getnames cloud service'>Entities</button><br>

	<textarea id='prompt56id' height=200>Loading...</textarea><br>

	<iframe id='iframe56id' name='iframe25name' height=100 >
	</iframe>
</p>

<p>Press the Submit button and try again, if you see any of the following messages:
	<ul>
		<li>Endpoint read failed</li>
		<li>Error: could not handle the request</li>
		<li>Error: Server Error</li>
	</ul>
</p>

</body>

</html>
