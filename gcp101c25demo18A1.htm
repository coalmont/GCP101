<html>
<!--
	This source code is for use in Chapter 25 of the online book "GCP 101 by Ri4C".
	The logic of this source code is explained in Chapter 26.
	Chapter 25 URL: https://ri4c.com/gcp101-chapter-25-html-app-on-local-machine/
	Chapter 26 URL: http://ri4c.com/gcp101-chapter-26-javascript-calling-google-cloud-functions/
	Book homepage: https://ri4c.com/gcp101/
 -->

<head>

<meta charset='utf-8'/>

<script type='text/javascript'>

'use strict';

const googleCloudProjectId = 'xtb4gcp18ax';

const selfSuffix = '18A1';
const selfTitle = 'Gcp101C25Demo'+selfSuffix;
const cellInitialKey = 'myrow'+selfSuffix;
const cellInitialData = 'mydata'+selfSuffix;

var iframe25Loaded = false;
const expectedCloudServiceDelaySeconds = 1;

const cloudServiceUrl = 'https://us-central1-'+googleCloudProjectId+'.cloudfunctions.net/datastore2'+'3setvalue';
const codingLessonUrl = 'https://ri4c.com/gcp101-chapter-25-html-app-on-local-machine/';
const HR = '\n--------------------\n';

function padLeadZeros(number, zeroCount) {
  var x = number;
  switch (zeroCount) {
    case 2: x = number <= 99 ? ("00"+number).slice(-2) : number; break;
    case 3: x = number <= 999 ? ("000"+number).slice(-3) : number; break;
    case 4: x = number <= 9999 ? ("0000"+number).slice(-4) : number; break;
    default: x = number;
  }
  return x;
}

function logWrite(message) { // No tracing a low-level utility
	try {
		var stack = new Error().stack;
		var caller = stack.split('\n')[1].trim();
		caller = caller.split('@')[0].trim();
		caller = caller.split('/')[0].trim();
		console.log(simpleTimestamp()+' '+caller+': ' + message);
	}
	catch(err) {console.log(err.message)}
}

function simpleTimestamp() { // No tracing a low-level utility
	var xNow = new Date();
	var xHours = padLeadZeros(xNow.getHours(),2);
	var xMinutes = padLeadZeros(xNow.getMinutes(),2);
	var xSeconds = padLeadZeros(xNow.getSeconds(),2);
	var xMilliseconds = padLeadZeros(xNow.getMilliseconds(),3);
	return xHours + ':' + xMinutes + ':' + xSeconds + '.' + xMilliseconds;
}

function bodyOnloadEventHandler(event) { // F1: Aim form action at the cloud service 
	logWrite('L1064 Start');
	
	document.getElementById('h3topic25id').innerHTML = selfTitle;	
	document.getElementById('key25id').value = cellInitialKey;	
	document.getElementById('column25id').value = cellInitialData;	
	
	logWrite('L1070 Resets cloud service URL');
	document.getElementById('form25id').action = cloudServiceUrl;	
	
	document.getElementById('lessonUrl25id').value = codingLessonUrl;
	document.getElementById('lessonUrl25id').style.width = 0.4*screen.width;
	
	document.getElementById('iframe25id').style.width = 0.4*screen.width;
	
	document.getElementById('prompt25id').style.height = 100;
	document.getElementById('prompt25id').style.width = 0.4*screen.width;
	document.getElementById('prompt25id').innerHTML = 'Ready at ' + simpleTimestamp(); 
	
	logWrite('L1082 Finish'+HR+'PAGE LOADED'+HR);
}

function iframe25OnloadEventHandler(event) { // F2: Flag up iframe25Loaded
	logWrite(HR);
	logWrite('L2087 Start');
	iframe25Loaded = true;
	logWrite('L2089 Finish; Set iframe25Loaded=' + iframe25Loaded + HR);
}

function form25SubmitEventHandler(event) { // F3: Flag down iframe25Loaded
	logWrite('L3093 Start');
	
	setTimeout(function (){
		logWrite('L3096 Disable the Submit button');
		document.getElementById("btnsubmit25id").disabled = true;
		document.body.style.cursor = 'wait';
		document.getElementById("btnclear25id").focus();
	}, 22);
	
	setTimeout(function (){
	
		logWrite('L3104 Start; iframe25Loaded: ' + iframe25Loaded);
		
		resetOutputFields('Submitting data');
		
		var form = document.getElementById('form25id');
		var iFrame = document.getElementById('iframe25id');
		
		iframe25Loaded = false;
		logWrite('L3112 Flag down, iframe25Loaded: ' + iframe25Loaded);
		
		logWrite('L3114 Set up to detect cloud response');
		iFrame.onload = iframe25OnloadEventHandler(event);
		
		logWrite('L3117 Send data to cloud service');
		form.submit();
		
		logWrite('L3120 Watch for cloud response');
		setTimeout(form25ResponseDelayHandler, 1000*expectedCloudServiceDelaySeconds);
		
		logWrite('L3123 Finish; iframe25Loaded: ' + iframe25Loaded + HR);
	
	}, 222);
	
	logWrite('L3127 Finish');
}

function form25responseProcessed() { // F4: Confirm input values

	if (!iframe25Loaded) {
		logWrite('L4133 Still waiting for the cloud');	
		return false; 
	}
	
	logWrite('L4137 Start; iframe25Loaded: ' + iframe25Loaded);

	var cellKind = document.getElementById('kind25id').value;
	var cellKey = document.getElementById('key25id').value;
	var cellProperty = document.getElementById('column25id').value;
	var cellValue = document.getElementById('lessonUrl25id').value;

	var msg = 'Kind: '+cellKind + '\nKey: '+cellKey + '\nMycolumn3: '+cellProperty + '\nurlOfLesson: '+cellValue;
	
	logWrite('L4146 Report input data');
	document.getElementById('prompt25id').innerHTML = msg;
	
	setTimeout(function (){
		logWrite('L4150 Enable the Submit button');
		document.getElementById("btnsubmit25id").disabled = false;
		document.body.style.cursor = 'auto';
	}, 111);
	
	logWrite('L4155 Finish'+HR+'ALL DONE'+HR);
	
	return true;
}

function resetOutputFields(actionVerb) { // F5: Prompt the user of the current status
	logWrite('L5161 Start; reset the user interface');
	
	iframe25Loaded = false;
	
	document.getElementById('prompt25id').innerHTML = actionVerb + ' at ' + simpleTimestamp(); 
	
	var iFrame = document.getElementById('iframe25id');
	try {
		iFrame.src = 'about:blank';
	} catch (e) {
		logWrite(e.message);
	}
	
	logWrite('L5174 Finish');
}

function form25ClearEventHandler() { // F6 Reset the UI
	logWrite('F6178 Start');
	
	resetOutputFields('Ready');
	
	logWrite('F6182 Enable the Submit button');
	document.getElementById("btnsubmit25id").disabled = false;
	
	logWrite('L6185 Finish'+HR+'ALL CLEAR'+HR);
}

function form25ResponseDelayHandler() { // F7 Watch for and process cloud response
	logWrite('L7189 Start');
    setTimeout(function () {
		logWrite('L7191 About to check response');
		if (!form25responseProcessed())
		{
			logWrite('L7194 About to process response');
			form25ResponseDelayHandler();
		}
    }, 1000*expectedCloudServiceDelaySeconds);
	logWrite('L7198 Finish');
}

</script>

</head>

<body onload='bodyOnloadEventHandler()'>

<h3 id='h3topic25id'>(undeclared title)</h3>

<form id='form25id' target='iframe25name' method='POST' enctype='application/json' action='URL missing'>
	Kind: <input id='kind25id' name='kind' type='text' value='mytable1' title='Kind of data (table)' /><br>
	Key: <input id='key25id' name='key' type='text' value='myrow18A1' title='Name of data key (row)' /><br>
	Mycolumn3: <input id='column25id' name='value[mycolumn3]' type='text' value='my21data4' title='Name of data property (column)' /><br>
	urlOfLesson: <br><input id='lessonUrl25id' name='value[urlOfLesson]' type='text' value='URL optional' title='Value of data (cell)' />
</form>

<p><button form='form25id' id='btnsubmit25id' name='btnsubmit' onclick='form25SubmitEventHandler()'>Submit</button>
	<button id='btnclear25id' name='btnclear' onclick='form25ClearEventHandler()'>Clear</button><br>

	<textarea id='prompt25id' height=100>Loading...</textarea><br>

	<iframe id='iframe25id' name='iframe25name' height=200 >
	</iframe>
</p>

<p>Press the Submit button and try again, if you see any of the following messages:
	<ul>
		<li>Endpoint read failed</li>
		<li>Error: could not handle the request</li>
		<li>Error: Server Error</li>
	</ul>
</p>

</body>

</html>
